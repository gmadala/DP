// ===============
//  FORM ELEMENTS
// ===============

.form-row {
  margin-bottom: 10px;
}

.form-block {
  padding: 5px 10px;

  .text-error {
    display: block;
  }
}

.form-footer {
  text-align: right;
}

.static-option {
  padding: 5px 0 0;
  margin: 0 0 10px;
}

.text-error {
  @extend %small;
  color: $danger;
  line-height: $baseLineHeight;
  display: block;
  margin: 0 0 10px;
  right: -1%;
}

.text-disabled {
  color: $disabled;
}

// Basic form element styling.
fieldset {
}

legend {
}

label {
  @extend .heavy;
  display: block;

  &.inline {
    display: inline;
  }
}

label {
  @extend %small;
  -webkit-user-select: none;
  cursor: default; // override Bootstrap; we don't need pointers on labels.
  margin: 14px 0 0 0;

  // but allow pointers on labels if we explicitly want them
  &.pointer {
    cursor: pointer;
  }
}

input, select {
  font-size: $inputFontSize;
  color: $text;
  height: $cta-2-height;
  width: 45%;
  padding: 5px 9px;
  margin: 5px 0;
}

input.noglobal {
  height: 12px !important;
}

textarea {
  font-size: $inputFontSize;
  color: $text;
  height: 60px;
  width: 100%;
  padding: 5px 9px;
  margin: 5px 0;
  border-color: #bbb;
}

input,
input[type="text"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  @include border-radius($borderRadius);
  @include box-shadow(none);
  color: $text;
  font-size: $inputFontSize;
  background: $white;
  border: 1px solid $form-border;

  &:focus {
    @include box-shadow(rgba(0, 0, 0, 0) 0 0 0);
    color: $text;
    border-color: $highlight;
    outline: none;
  }

  &:disabled, &.disabled {
    border-color: $border;
  }

  &:focus:invalid, &:invalid {
    @include box-shadow(rgba(0, 0, 0, 0) 0 0 0);
    color: $text;
    border: 1px solid $form-border;
  }

  &.nxg-invalid {
    border: 1px solid $danger;

    &:focus {
      border: 1px solid $highlight;
    }
  }

  // placeholder text
  &::-webkit-input-placeholder,
  &::-moz-placeholder,
  &::-ms-input-placeholder {
    font-weight: normal;
    color: #B7B7B7;
  }

  // get rid of IE10's default clear button
  &::-ms-clear {
    display: none;
  }

  // use this when also using the input "size" and "maxlength" attributes for inputs
  // of known length (social security numbers, PINs, phone numbers, etc.)
  &.size-fixed {
    width: auto;
  }
}

input[type="file"] {
  border: none;
  background: none;
  width: 60%;
  display: inline;
}

// inputs that are the full-width of parent
.input-full {
  @extend %full-width;
}

.input-large-width {
  width: 85%;
}

.no-right-padding {
  padding-right: 0;
}

.no-padding {
  padding: 0;
}

.no-margin {
  margin: 0;
}

.small-left-padding {
  padding-left: 13px;
}

.medium-right-padding {
  padding-right: 18px;
}

.full-width {
  width: 100%;
}

.sort-by {
  color: #404040;
}

// Overriding Bootstrap's input-prepend class to make it work for us.
.input-prepend.dollar .add-on {
  top: 11px;
  padding-right: 2px;
  margin-right: 0;
  position: relative;
  font-size: 14px;
  background-color: transparent;
  border: none;

  &.no-top {
    top: 0px;
  }
}

.input-prepend input {
  margin-bottom: 5px;
}

// For custom inputs that are wrapped in a directive, we need to manually
// ensure the error border is applied.
.nxg-business-field.nxg-invalid, .date-field.nxg-invalid {
  border: 0;

  input {
    border: 1px solid $error;
  }
}

select {
  -webkit-user-select: none;

  &:focus {
    border-color: darken($border, 20%) !important;

    &:invalid, &:invalid:focus {
      @include box-shadow(rgba(0, 0, 0, 0) 0 0 0);
      color: $highlight;
      border-color: $border;
    }
  }
}

/*
 * CUSTOM SELECT MENU
 * Overrides default browser styles to use a custom select menu style,
 * complete with custom arrows.
 *
 * Note, because the border is on the containing div, any
 * ng-class attributes to apply invalid styling should be
 * placed on the .style-select element, not the select itself.
 */
.style-select {
  @include border-radius($borderRadius);
  position: relative;
  overflow: hidden;
  max-width: 106%;
  border: 1px solid $highlight;
  margin: 5px 0;
  background: #fff;

  &:after {
    content: '';
    display: block;
    position: absolute;
    top: 10px;
    right: 9px;
    height: 0;
    width: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 10px solid $highlight;
    pointer-events: none; // allows select menu to be clickable through arrow
  }

  &.auto {
    width: auto;
  }

  &.small {
    width: 45%;
    min-width: 45%;
  }

  &.large {
    width: 85%;
    min-width: 85%;
  }

  &.disabled {
    border-color: $border;

    &:after {
      border-color: $border transparent transparent;
    }
  }

  &.nxg-invalid {
    border: 1px solid $danger;

    &:after {
      border-color: $danger transparent transparent;
    }
  }

  select {
    @extend .truncate;
    @include border-radius($borderRadius);
    width: 100%;
    height: 30px; // to account for outer div border
    font-size: $inputFontSize;
    font-weight: normal;
    background: $white;
    -webkit-gradient: none;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    -o-appearance: none;
    padding: 5px 15% 5px 15px;
    border: 0;
    margin: 0;

    &::-ms-expand {
      display: none;
    }

    &:focus {
      @include box-shadow(none);
      color: $highlight;
      outline: none;
    }

    &:active {
      background-color: #CCCCCC;
    }

    &:disabled {
      color: #B7B7B7;
    }
  }
}

/*
 * CUSTOM CHECKBOXES
 * Our checkboxes use custom icons rather than default browser-rendered
 * checkboxes. To work properly, the HTML for checkboxes should resemble:
 * <label class="cr-label" for="foo">
 *    Actual label contents
 * </label>
 * <input type="checkbox" id="foo"/>
 * <label class="checkbox-img" for="foo"></label>
 *
 */
input[type="checkbox"] {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  clip: rect(0 0 0 0);
  background: url('../img/icons/checkbox.svg');
  z-index: 20;

  &:active, &:focus, &:hover {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  &:checked + .checkbox-img {
    background-image: url('../img/icons/checkbox_checked.svg');
  }

  &:checked:disabled + .checkbox-img {
    background-image: url('../img/icons/checkbox_disabled_checked.svg');
  }

  &:disabled + .checkbox-img {
    background-image: url('../img/icons/checkbox_disabled.svg');
  }

  &:focus + .checkbox-img {
    background-image: url('../img/icons/checkbox_focus.svg');
  }

  &:focus:checked + .checkbox-img {
    background-image: url('../img/icons/checkbox_checked_focus.svg');
  }

  td & {
    display: block;
    margin: 0 auto;
  }
}

/*
 * CUSTOM RADIO BUTTONS
 * Our radio buttons use custom icons rather than default browser-rendered
 * radio buttons. To work properly, the HTML for radio buttons should resemble:
 * <label class="cr-label" for="foo">
 *    Actual label contents
 * </label>
 * <input type="radio" id="foo"/>
 * <label class="radio-img" for="foo"></label>
 */
input[type="radio"] {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  clip: rect(0 0 0 0);
  background: url('../img/icons/radio.svg');
  z-index: 20;

  &:active, &:focus, &:hover {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  &:checked + .radio-img {
    background-image: url('../img/icons/radio_selected.svg');
  }

  &:checked:disabled + .radio-img {
    background-image: url('../img/icons/radio_disabled_selected.svg');
  }

  &:disabled + .radio-img {
    background-image: url('../img/icons/radio_disabled.svg');
  }

  &:focus + .radio-img {
    background-image: url('../img/icons/radio_focus.svg');
  }

  &:focus:checked + .radio-img {
    background-image: url('../img/icons/radio_selected_focus.svg');
  }
}

.radio-list {
  margin-left: 15px;

  li {
    margin-bottom: 5px;
  }
}

/*
 * FULL-WIDTH CHECKBOX/RADIO BUTTON AND LABEL PAIRS
 * Pairs the label and checkbox/radio button together in a full-width
 * block, both vertically centered.
 *
 * Used for notifications & filters.
 */
.cr-label {
  display: table-cell;
  vertical-align: middle;
  padding: 0 40px 0 10px; // to account for checkbox or radio button
}

.checkbox-img, .radio-img {
  display: inline-block;
  position: absolute;
}

.checkbox-img {
  height: 24px;
  width: 24px;
  background: url('../img/icons/checkbox.svg');
  background-size: 24px 24px;
  background-repeat: no-repeat;
  margin: 0;

  &.small {
    height: 18px;
    width: 18px;
    background: url('../img/icons/checkbox.svg');
    background-size: 18px 18px;
    background-repeat: no-repeat;
  }
}

.radio-img {
  top: 7px;
  right: 10px;
  height: $radioSize;
  width: $radioSize;
  background: url('../img/icons/radio.svg');
  background-size: $radioSize $radioSize;
  background-repeat: no-repeat;
  margin: 3px 0 0 5px;
}

/*
 * INLINE CHECKBOXES AND RADIO BUTTONS
 * Checkboxes/radio buttons that appear side by side, or
 * appear in a non-full-width context.
 */
.cr-inline {
  position: relative;
  margin-bottom: 5px;

  .checkbox-img, .radio-img {
    position: relative;
    top: 5px;
  }

  .cr-label {
    display: inline-block;
    max-width: 90%;
    padding: 0 15px 0 0;
    margin: 0;

    &:last-child {
      padding: 0;
    }
  }

  .radio-img {
    right: 4px;
  }

  .checkbox-img {
    margin-right: 5px;

    &.small {
      top: 6px;
    }
  }
}

@media only screen and (max-width: 372px) {
  .cr-inline {
    .cr-label {
      max-width: 85%;
    }
  }
}

.cr-inline-label {
  position: relative;
  top: 6px;
}

/*
 * TABULAR INLINE CHECKBOXES
 * Specific use case for inline checkboxes within narrow table cells
 * ie. Auction Seller Floorplan Search
 */
.cr-inline-narrow {
  position: relative;
  padding-top: 5px;

  .checkbox-img {
    position: relative;
    display: block;
    float: left;
    margin-right: 5px;
  }

  .cr-label {
    display: block;
    padding: 2px 10px 0 0;
    margin: 0;
  }
}

.clear-search {
  float: right;
}

/*
 * CUSTOM STYLED INPUT
 * An input with special styling, which may or may not have a
 * button attached to it on the right.
 *
 * Typical HTML:
 * <div class="styled-input with-btn">
 *   <input type="text"/>
 *   <button class="btn btn-input" type="submit">
 *     <span nxg-icon="icon-search"></span>
 *   </button>
 * </div>
 */
.styled-input {
  @extend .clearfix;
  position: relative;
  width: 100%;
  margin: 5px 0;

  input, input[type="text"] {
    width: 85%;
    margin: 0;

    &:focus + .btn-input {
      background: $highlight;

      &:active, &:hover {
        background: darken($accent, 10%);
      }
    }
  }

  &.with-btn input,
  &.with-btn input[type="text"] {
    @include border-right-radius(0);
    float: left;
  }
}

.smallInput {
  width: 55%;
}

.smallInputAuctionSettings {
  width: 140%;
}

.xsmallInput {
  width: 206px;
}

/*
 * BUTTON INPUT
 * Button specifically designed to be paired with an input,
 * and positioned exactly at the right edge of the input.
 */
.btn-input {
  @include border-left-radius(0);
  width: 10%;
  background: $accent;
  display: block;
  float: left;
  height: $cta-2-height;
  padding: 0;
  border: 0;
  margin: 0 0 0 -1px;

  &:focus {
    background: $highlight;
  }

  &:active, &:hover {
    background: darken($accent, 10%);

    .svg-icon svg {
      fill: $white;
    }
  }

  .svg-icon svg {
    fill: $white;
  }
}

/*
 * RANGE INPUT
 */
.range {
  @extend .clearfix;
  position: relative;

  .range-start, .range-end {
    @extend %float-l;
    width: 100px;

    input {
      width: 100%;
    }
  }

  .range-end {
    margin-left: 5px;
  }
}

/*
 * DATE FIELD
 */
.date-field {
  position: relative;

  &.date-inline {
    display: inline-block;
    margin-right: 15px;
  }

  input, input[type="text"] {
    width: 103%;
    padding-right: 26px; // to account for icon
  }

  .btn-unstyle {
    position: absolute;
    top: 38px;
    right: 27px;
    margin: 0;
  }
  .btn-calendar {
    position: absolute;
    top: 57%;
    right: 13%;
    margin: 0;
  }

  .reports-btn-calendar {
    position: absolute;
    top: 57%;
    right: -8%;
    margin: 0;
  }

  .disbursement-btn-calendar {
    position: absolute;
    top: 46%;
    right: 8%;
    margin: 0;
  }

  .checkout-btn-calendar {
    position: absolute;
    top: 27%;
    right: -6%;
    margin: 0;
  }

  .btn-unstyle:hover, .btn-unstyle:focus {
    .icon-calendar svg {
      fill: $highlight;
    }
  }
  .dropdown-menu thead tr:first-child {
    border-bottom: 1px solid #bbb;
    strong {
      font-size: 1.75em;
    }
  }
}

/*
 * DATEPICKER GRID
 * We need to use the classes bootstrap's datepicker uses,
 * and override those styles; hence the specificity.
 */
.datepicker {
  &.datepicker-dropdown {
    @include box-shadow(rgba(0, 0, 0, 0) 0 0 0);
    @include border-radius(0);
    padding: 5px 7px;
  }

  .datepicker-days, .datepicker-months, .datepicker-years {
    .prev, .next {
      font-size: 0;
      width: 27px;

      &:before {
        content: '';
        @extend %heavy;
        position: absolute;
        top: 8px;
        color: #999;
        font-family: 'Lucida Sans Unicode';
        font-size: 16px;
        margin: 0 5px;
      }

      &:hover {
        border-radius: 0;
      }
    }

    .prev:before {
      content: '<';
      left: 7px;
    }

    .next:before {
      content: '>';
      right: 7px;
    }
  }

  .datepicker-switch {
    @include border-radius(0);
    color: $highlight;
    letter-spacing: 0;
    font-size: $large-font-size;
  }

  thead tr:first-child {
    border-bottom: 1px solid $border;
  }

  .day, .dow, .month {
    @extend %small;
  }

  .dow {
    color: $text;
  }

  .day, .month, .year {
    @include border-radius(0);
    color: $highlight;

    &.new, &.old {
      color: #999;
    }
  }

  table tr td.active:hover,
  table tr td.active,
  table tr td.disabled.active:hover,
  table tr td.disabled.active,
  table tr td.active.disabled.active,
  table tr td.active:active,
  table tr td.active:hover:active,
  table tr td.day.active,
  table tr td span.month.active,
  table tr td span.year.active {
    @include border-radius(0);
    @include background-image(none);
    color: $white;
    background-color: $highlight;

    &:hover {
      background-color: darken($highlight, 10%);
    }
  }
}

.date-picker {
  ul {
    top: 48px !important;
  }
}

.nxg-date-field {
  width: 125px;
}

/*
 * AUTOCOMPLETE
 */
.typeahead.dropdown-menu {
  padding: 0;
  border-color: $border;

  li {
    &.active a {
      @include background-image(none);
      background-color: $primary;
      color: $white;
    }

    a {
      color: $text;
      border-color: $border;
    }
  }
}

/*
 * IE9-SPECIFIC STYLES
 */
.ie9 .style-select {
  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 5px;
    height: 100%;
    width: 24px;
    background: $white;
  }

  select { // in ie9, padding on the left pushes the arrow over.
    padding: 4px 9px;
  }
}

.supported-files {
  font-size: 10px;
  color: #666666;
  padding-top: 10px;
}

.drop-box {
  background: #FBFBFB;
  border: 2px dashed #BBBCBE;
  width: 100%;
  min-height: 140px;
  text-align: left;
  margin: 10px 0 0 0;
}

.drop-box-empty {
  padding-top: 50px;
  text-align: center;
  font-size: 14px;
  color: #BBBCBE;
}

.dragover {
  border: 2px dashed #069;
}

ul.files-container {
  height: 100%;
  width: 100%;
  overflow-y: auto;
  padding: 5px;
  list-style-type: none;
  transition: all .5s;
}

ul.files-container li {
  width: 38%;
  height: 38%;
  padding: 1px;
  float: left;
  position: relative;
  margin: 6%;
}

.thumb {
  max-width: 96px;
  background-size: cover;
  background-repeat: no-repeat;
  height: 96px;
  width: 96px;
  background-color: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, .25);
  border: 1px solid white;
  display: block;
}

ul.files-container li .file-delete {
  background-color: rgba(0, 0, 0, .25);
  width: 50px;
  height: 50px;
  font-family: Lato, Arial, Tahoma, Helvetica, sans-serif;
  color: white;
  font-size: 25px;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, .25);
  text-align: center;
  cursor: pointer;
  line-height: 50px;
  position: absolute;
  border-radius: 50%;
  z-index: 101;
  top: 25px;
  left: 25px;
  opacity: 0;
  transition: all .30s;
  transform: scale(0.5);
}

ul.files-container li:hover .file-delete {
  opacity: 1;
  transform: scale(1);
}

ul.files-container li .file-delete:hover {
  background-color: rgba(0, 0, 0, .45);
}

.files-container .ng-hide {
  background: url("../img/file.png") no-repeat center;
  background-size: contain;
  display: block !important;
}

.files-container .ngf-hide {
  background: url("../img/file.png") no-repeat center;
  background-size: contain;
  display: block !important;
}

.search-date-picker {
  input {
    width: 85%;
    height: 30px;
    line-height: 18px;
  }
}

.reports-search-date-picker {
  button span {
    top: 58%;
    right: 8%;
  }
  input {
    width: 137%;
  }
  .dropdown-menu {
    display: block;
    top: 63px;
    left: 15px;
    padding: 0px;
    height: 279px;
  }
}

#end-date-picker {
  .dropdown-menu {
    left: initial !important;
    right: 15px;
  }
}

.ng-react-date-picker{
  width: 100% !important;
}

.disbursement-date-picker {
  input {
    width: 97%;
  }
}

.end-date {
  margin-left: -27px;
}

.margin {
  margin: 2px 25px 0;
}
